plugins {
    id 'io.github.goooler.shadow' version '8.1.8' apply false
    id "org.jetbrains.kotlin.jvm" version '2.0.0' apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.github.goooler.shadow'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    repositories {
        maven {
            name = 'papermc'
            url = 'https://repo.papermc.io/repository/maven-public/'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name = 'jitpack'
            url = 'https://jitpack.io/'
        }
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        compileOnly "io.papermc.paper:paper-api:${project.minecraft_version}-R0.1-SNAPSHOT"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_version}"
    }

    if(project.name != 'bluefox') {
        dependencies {
            compileOnly "org.jetbrains.kotlin:kotlin-stdlib:${project.kotlin_version}"
        }
        shadowJar {
            exclude 'META-INF/*.kotlin_module'
            exclude 'kotlin/**'
            exclude 'org/jetbrains/**'
            exclude 'org/intellij/**'
        }
    }

    processResources {
        def props = [group: project.property('group'), name: project.property('plugin_name'), version: project.property('version')]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }

    shadowJar {
        destinationDirectory = file('../test/server/plugins')
        archiveBaseName.set(project.property('plugin_name') as String)
        archiveClassifier.set('')
    }
}